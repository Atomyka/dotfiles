#!/bin/bash

alias gcc='gcc-7'
alias g++='g++-7'

export CLICOLOR=1

# BSD
export LSCOLORS='GxFxCxDxBxegedabagacedkk'

# Linux
export LS_COLORS='di=1;36:ln=1;35:so=1;32:pi=1;33:ex=1;31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=34;43'
alias ls='ls --color=auto'


# My own aliases.
alias q='exit'
alias c='clear'
alias h='history'
alias cs='clear;ls'
alias p='cat'
alias pd='pwd'
alias lsa='ls -a'
alias lsl='ls -l'
alias pd='pwd'
alias null='/dev/null'
alias t='time'
alias rm='rm -i'

# Directories
alias home='cd ~'
alias root='cd /'
alias dtop='cd ~/Desktop'
alias dbox='cd ~/Dropbox'
alias box='cd ~/Box\ Sync'
alias gdrive='cd ~/Google\ Drive'
alias code='cd ~/code'
alias o=open
alias ..='cd ..'
alias ...='cd ..; cd ..'
alias ....='cd ..; cd ..; cd ..'
alias pv='cd -'

# Git Shortcuts
alias g='git'
alias st='git status'
alias com='git commit -m'
alias clone='git clone'
alias sth='git stash'
alias lg='git log'
alias u='git add -u'
alias all='git add .'

# Shortcuts to my software projects
alias projects='cd ~/Dropbox/Projects'
alias iosprojects='cd ~/Dropbox/Projects/iOSProjects'
alias pebbleprojects='cd ~/Dropbox/Projects/PebbleProjects'
alias cppprojects='cd ~/Dropbox/Projects/C++Projects'
alias cprojects='cd ~/Dropbox/Projects/CProjects'
alias pythonprojects='cd ~/Dropbox/Projects/PythonProjects'
alias goprojects='cd ~/Dropbox/Projects/GoProjects'
alias rustprojects='cd ~/Dropbox/Projects/RustProjects'
alias arduinoprojects='cd ~/Dropbox/Arduino'
alias notebook='cd ~/Dropbox/Notebook'
alias docs='cd ~/Documents'

# Shortcuts to vimrc and bashrc
alias vimrc='vim ~/.vimrc'
alias bashrc='vim ~/.bashrc'
alias zshrc='vim ~/.zshrc'
alias loadbash='source ~/.bashrc'
alias loadzsh='source ~/.zshrc'
alias loadsecrets='source ~/.secrets.sh'

# Typos.
alias sl='ls'
alias givm='gvim'


# Moar environment variables.
export EDITOR=vim

# Grep options
alias grep='grep --color=auto --exclude=tags --exclude-dir=.git --exclude-dir=venv'

# Ctags.
alias gentags='ctags -R .'

# ARM toolchain
export PATH="$PATH:~/toolchains/gcc-arm-none-eabi-4_9-2015q3/bin"

# MSP toolchain
export PATH="$PATH:~/toolchains/ti/gcc/bin"

# CUDA toolchain
export PATH="$PATH:/Developer/NVIDIA/CUDA-8.0/bin"
export DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH:/Developer/NVIDIA/CUDA-8.0/lib"

export PATH="/usr/local/sbin:$PATH"

# Coreutils
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"

# Curl
export PATH="/usr/local/opt/curl/bin:$PATH"

# Getopt
export PATH="/usr/local/opt/gnu-getopt/bin:$PATH"

# Tar
export PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"
export MANPATH="/usr/local/opt/gnu-tar/libexec/gnuman:$MANPATH"

# Python
export PATH="/usr/local/opt/python/libexec/bin:$PATH"

# Rsync
export PATH="/usr/local/opt/unzip/bin:$PATH"

# Arcanist
export PATH="$PATH:/$HOME/toolchains/arcanist/bin"

# MagicSnippets scripts
export PATH="$PATH:$HOME/Dropbox/Projects/MagicSnippets"

# llvm
export PATH="/usr/local/opt/llvm/bin:$PATH"

# openSSL
export PATH="/usr/local/opt/openssl/bin:$PATH"

# GPG
export GPG_TTY=$(tty)

# For note taking.
notes() {
  if [ "$1" == '' ]; then
    less "$HOME/Dropbox/notes.txt"
  else
    echo "$@" >> "$HOME/Dropbox/notes.txt"
  fi
}

# Help with extractions
extract () {
  if [ -f "$1" ] ; then
    case "$1" in
      *.tar.bz2)   tar xvjf "$1"    ;;
      *.tar.gz)    tar xvzf "$1"    ;;
      *.bz2)       bunzip2 "$1"     ;;
      *.rar)       unrar x "$1"     ;;
      *.gz)        gunzip "$1"      ;;
      *.tar)       tar xvf "$1"     ;;
      *.tbz2)      tar xvjf "$1"    ;;
      *.tgz)       tar xvzf "$1"    ;;
      *.zip)       unzip "$1"       ;;
      *.Z)         uncompress "$1"  ;;
      *.7z)        7z x "$1"        ;;
      *)           echo "don't know how to extract '$1'..." ;;
    esac
  else
    echo "'$1' is not a valid file!"
  fi
}

# fd - cd to selected directory
# shellcheck source=/dev/null
fd() {
  local dir
  # shellcheck disable=SC2086,SC2164
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}

# fdr - cd to selected parent directory
# shellcheck source=/dev/null
fdr() {
  local dirs=()
  get_parent_dirs() {
    if [[ -d "${1}" ]]; then dirs+=("$1"); else return; fi
    if [[ "${1}" == '/' ]]; then
      # shellcheck disable=SC2086
      for _dir in "${dirs[@]}"; do echo $_dir; done
    else
      # shellcheck disable=SC2046
      get_parent_dirs $(dirname "$1")
    fi
  }
  # shellcheck disable=SC2046,SC2155
  local DIR=$(get_parent_dirs $(realpath "${1:-$PWD}") | fzf-tmux --tac)
  # shellcheck disable=SC2164
  cd "$DIR"
}

# fe [FUZZY PATTERN] - Open the selected file with the default editor
#   - Bypass fuzzy finder if there's only one match (--select-1)
#   - Exit if there's no match (--exit-0)
fe() {
  local files
  IFS=$'\n' files=($(fzf-tmux --query="$1" --multi --select-1 --exit-0))
  # shellcheck disable=SC2128
  [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}

# fkill - kill process
# shellcheck source=/dev/null
fkill() {
  local pid
  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    echo $"pid" | xargs kill -$"{1:-9}"
  fi
}


# ftags - search ctags
# shellcheck disable=SC2046
ftags() {
  local line
  [ -e tags ] &&
  line=$(
    awk 'BEGIN { FS="\t" } !/^!/ {print toupper($4)"\t"$1"\t"$2"\t"$3}' tags |
    cut -c1-80 | fzf --nth=1,2
  ) && ${EDITOR:-vim} $(cut -f3 <<< "$line") -c "set nocst" \
                                      -c "silent tag $(cut -f2 <<< "$line")"
}

alias countlines='git ls-files | xargs wc -l'

# That's all folks!
